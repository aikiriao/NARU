name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Preparation on Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install libpulse-dev

    - name: Preparation on Windows
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build libraries
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug ..
        cmake --build . --config Debug
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release

    - name: Test
      run: |
        cd build
        ctest -C Debug

    - name: Build tools
      run: |
        pushd tools/naru_codec
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
        popd
        pushd tools/naru_player
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
        popd

    - name: Create artifacts on UNIX platform
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        ARTIFACT_ROOT=artifact_${{ matrix.os }}
        mkdir ${ARTIFACT_ROOT} 
        pushd ${ARTIFACT_ROOT}
        mkdir include && mkdir libs && mkdir tools
        popd
        cp include/*.h ${ARTIFACT_ROOT}/include/
        cp build/libnarucodec.a ${ARTIFACT_ROOT}/libs/
        cp build/libnarudec.a ${ARTIFACT_ROOT}/libs/
        cp tools/naru_codec/build/naru ${ARTIFACT_ROOT}/tools/
        cp tools/naru_player/build/naruplayer ${ARTIFACT_ROOT}/tools/
        zip -r ${ARTIFACT_ROOT}.zip ${ARTIFACT_ROOT}

    - name: Create artifacts on Windows platform
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        ARTIFACT_ROOT=artifact_${{ matrix.os }}
        mkdir ${ARTIFACT_ROOT} 
        pushd ${ARTIFACT_ROOT}
        mkdir include && mkdir libs && mkdir tools
        popd
        cp include/*.h ${ARTIFACT_ROOT}/include/
        cp build/Release/narucodec.lib ${ARTIFACT_ROOT}/libs/
        cp build/Release/narudec.lib ${ARTIFACT_ROOT}/libs/
        cp tools/naru_codec/build/Release/naru.exe ${ARTIFACT_ROOT}/tools/
        cp tools/naru_player/build/Release/naruplayer.exe ${ARTIFACT_ROOT}/tools/
        zip -r ${ARTIFACT_ROOT}.zip ${ARTIFACT_ROOT}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: |
          artifact_${{ matrix.os }}.zip
