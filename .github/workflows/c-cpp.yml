name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Preparation on Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install libpulse-dev

    - name: Preparation on Windows
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build and test on UNIX platform
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        mkdir build
        cd build
        cmake ..
        make
        ctest

    - name: Build and test on Windows platform
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        mkdir build
        cd build
        cmake ..
        msbuild ALL_BUILD.vcxproj /t:build -maxcpucount
        ctest -C Debug

    - name: Build tools on UNIX platform
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        cd tools/naru_codec
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make
        cd ../../naru_player
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make
        tar -cvzf artifact_${{ matrix.os }} ./tools/naru_codec/build/naru ./tools/naru_player/build/naruplayer

    - name: Build tools on Windows platform
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        cd tools/naru_codec
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
        cd ../../naru_player
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
        tar -cvzf artifact_${{ matrix.os }} ./tools/build/Release/naru.exe ./tools/naru_player/build/Release/naruplayer.exe

    - name: Upload artifacts on UNIX platform
      if: runner.os == 'Linux' || runner.os == 'macOS'
      uses: actions/upload-artifact@v2
      with:
        name: tools
        path: |
          artifact_${{ matrix.os }}

    - name: Upload artifacts on Windows platform
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      with:
        name: tools
        path: |
          artifact_${{ matrix.os }}
